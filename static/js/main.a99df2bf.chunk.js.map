{"version":3,"sources":["components/Nav.js","components/Home.js","components/Motivation.js","context/Status.js","components/Challenges.js","components/day-challenge/Day1.js","components/day-challenge/Day2.js","components/day-challenge/Day3.js","components/day-challenge/DayChallenge.js","App.js","reportWebVitals.js","utils/GlobalStyles.js","index.js"],"names":["NavbarContainer","styled","div","MenuLinks","StyledLink","Link","Nav","className","to","fadeInContent","keyframes","MainWrapper","Home","style","fontSize","marginTop","Motivation","width","height","src","title","frameBorder","allow","allowFullScreen","StatusContext","React","createContext","ChallengeGrid","Challenge","attrs","props","animationDelay","delay","status","Challenges","DaysArray","dayStatus","daysArray","i","push","Math","random","textAlign","Status","Consumer","handleOnClick","onClick","Day1","Day2","Day3","DayChallenge","match","console","log","params","StatusButton","display","justifyContent","day","Day","App","savedStatus","JSON","parse","localStorage","getItem","useState","setDayStatus","Provider","value","e","target","innerHTML","index","Number","getAttribute","substr","stringify","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a99df2bf.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Nav = () => {\r\n\r\nreturn (\r\n    <NavbarContainer>\r\n        <StyledLink className='logo' to='/'>30-Day Boredom</StyledLink>\r\n        <MenuLinks>\r\n            <StyledLink to='/challenges'>Challenges</StyledLink>\r\n            <StyledLink to='/motivation'>Motivation</StyledLink>\r\n            <StyledLink to='/'>Home</StyledLink>\r\n        </MenuLinks>\r\n    </NavbarContainer>\r\n)\r\n}\r\n\r\nconst NavbarContainer = styled.div`\r\n   \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    padding: 1rem;\r\n    \r\n    background-color: lightblue;\r\n\r\n    @media only screen and (min-width: 600px) {\r\n            \r\n            flex-direction: row;\r\n    }\r\n`\r\n\r\nconst MenuLinks = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n    color: black;\r\n    text-decoration: none;\r\n    padding: 0 1rem;\r\n    font-size: 1rem;\r\n    transition: all 150ms ease-in;\r\n\r\n    &:hover {\r\n        color: #F8F0DF;\r\n    }\r\n\r\n    &.logo {\r\n        font-size: 2rem;\r\n        \r\n    }\r\n\r\n    &.logo:hover {\r\n        color:black;\r\n    }\r\n\r\n\r\n    @media only screen and (min-width: 600px) {\r\n        &.logo {\r\n        margin-right: auto;\r\n    }\r\n    }\r\n\r\n  \r\n`\r\n\r\nexport default Nav","import styled, { keyframes } from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Home = () => {\r\n    return (\r\n        <MainWrapper>\r\n        <h1 style={{fontSize:'3rem'}}>Get your brain to focus more.</h1>\r\n        <p>Take back your attention span by embracing boredom.</p>\r\n\r\n        <div style={{marginTop: '2rem'}}>\r\n\r\n        <StyledLink to='/motivation'>Motivation</StyledLink>\r\n        <StyledLink to='/challenges'>Start the challenge!</StyledLink>\r\n        </div>\r\n        </MainWrapper>\r\n    )\r\n\r\n}\r\n\r\nconst fadeInContent = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\nexport const MainWrapper = styled.div`\r\n    text-align: center;\r\n    padding: 2rem;\r\n    animation: 1s ${fadeInContent} ease-in;\r\n\r\n    /* & h1 {\r\n        width: 50%;\r\n        margin: 0 auto;\r\n    } */\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n    display: block;\r\n    color: black;\r\n    text-decoration: none;\r\n    padding: 1rem 2rem;\r\n\r\n    &:hover {\r\n        color: lightblue;\r\n    }\r\n`\r\n\r\nexport default Home","import { MainWrapper } from \"./Home\"\r\nconst Motivation = () => {\r\n    return (\r\n        <MainWrapper>\r\n        <h1>Motivation</h1>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias, magni laboriosam quia molestiae obcaecati, id perferendis non, provident quo laborum aliquid sint? Error harum architecto ea deserunt hic eveniet facere! Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, nemo? Sunt amet a blanditiis, illum inventore praesentium tempore similique nemo, velit ipsam distinctio iusto earum dolorem. Voluptas quo dolores ab?</p>\r\n\r\n       \r\n        <iframe  width=\"320px\" height=\"240px\" src=\"https://www.youtube.com/embed/Hu4Yvq-g7_Y\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n       \r\n        \r\n        </MainWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Motivation","import React from \"react\";\r\n\r\nconst StatusContext = React.createContext();\r\n\r\nexport default StatusContext","import styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useState } from \"react\";\r\nimport StatusContext from \"../context/Status\";\r\n\r\nconst Challenges = () => {\r\n\r\n    // const defaultDayStatus = Array(30);\r\n// const defaultDayStatus = ['failed'].concat(Array(29).fill('done'));\r\n\r\n// const [dayStatus, setDayStatus] = useState(defaultDayStatus);\r\n\r\n// const history = useHistory();\r\n// const doSomething = () => {\r\n//     return (\r\n//         alert(\"Failed\")\r\n//     )\r\n// }\r\n\r\n\r\n//     const handleOnClick = (e) => {\r\n//         console.log(e.target.getAttribute('day').substr(3));\r\n//         const index = Number(e.target.getAttribute('day').substr(3));\r\n//        if(e.target.innerHTML === 'Failed') {\r\n//            //setstate daystatus, currentprogress => depending on attribute 'day'\r\n//            //dayStatus[index] = 'failed'\r\n//            //send the state to the challenge page\r\n//        }\r\n//        if(e.target.innerHTML === 'Done') {\r\n//            //setstate daystatus, currentprogress\r\n//        }\r\n//         e.preventDefault(); //prevent transition\r\n//         doSomething();\r\n    \r\n//         // redirect after 1 second\r\n//         window.setTimeout(() => {\r\n//            history.push('/challenges');\r\n//         }, 1000)\r\n//     };\r\n\r\n\r\n\r\n\r\n    const DaysArray = ({dayStatus}) => {\r\n        const daysArray = []\r\n        for (let i=1; i<=30; i++) {\r\n            daysArray.push(<Challenge\r\n                className={`animate__animated animate__zoomIn ${dayStatus[i-1]}`}\r\n                delay={Math.random() * 1}\r\n                key={i}\r\n                // status={dayStatus[i-1]}\r\n                to={`/challenges/day${i}`}\r\n                >{i}</Challenge>)\r\n        }\r\n        return daysArray\r\n    }\r\n\r\n\r\n    // const resetStorage = () => {\r\n    //     localStorage.dayStatus = JSON.stringify([])\r\n    //     dayStatus = [];\r\n    // }\r\n    return (\r\n        <>\r\n        <h1 style={{textAlign: \"center\", marginTop: \"2rem\"}}>Challenges</h1>\r\n        <ChallengeGrid>\r\n        <StatusContext.Consumer>\r\n            {({dayStatus, handleOnClick}) => (\r\n            <>\r\n            <DaysArray dayStatus = {dayStatus}/>\r\n            <Challenge to='/challenges' onClick={handleOnClick}>Reset</Challenge>\r\n            </>\r\n            )}\r\n            \r\n        </StatusContext.Consumer>\r\n        </ChallengeGrid>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ChallengeGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 50px);\r\n    grid-template-rows: repeat(6, 50px);\r\n    grid-gap: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    \r\n`\r\n\r\n\r\n\r\n\r\nexport const Challenge = styled(Link).attrs( props => ({\r\n    style: {\r\n        animationDelay: `${props.delay}s`\r\n    }\r\n})\r\n\r\n)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 50px;\r\n    height: 50px;\r\n    color: black;\r\n    text-decoration: none;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    transition: all 150ms ease-in;\r\n    background-color: ${({status}) => {\r\n        switch (status) {\r\n            case 'failed':\r\n                return 'red'\r\n            case 'done':\r\n                return 'lightgreen'\r\n            case 'current':\r\n                return 'lightblue'\r\n            default:\r\n                return 'lightblue'\r\n        }\r\n    }};\r\n    position: relative;\r\n\r\n\r\n    &.done, &.failed {\r\n        pointer-events: none;\r\n       \r\n    }\r\n\r\n    .done&::after {\r\n        content: \"\";\r\n        background-image: url(\"https://cdn-icons-png.flaticon.com/512/190/190411.png\");\r\n        background-size: 30px 30px;\r\n        position: absolute;\r\n        top: 11px;\r\n        left: 11px;\r\n        color: green;\r\n        width: 30px;\r\n        height: 30px;\r\n    }\r\n\r\n    .failed&::after {\r\n        content: \"\";\r\n        background-image: url(\"https://cdn-icons-png.flaticon.com/512/753/753345.png\");\r\n        background-size: 30px 30px;\r\n        position: absolute;\r\n        top: 11px;\r\n        left: 11px;\r\n        color: green;\r\n        width: 30px;\r\n        height: 30px;\r\n    }\r\n   \r\n    &:hover {\r\n        box-shadow: 0 0 10px darkgreen;\r\n    }\r\n   \r\n`\r\n\r\nexport default Challenges","\r\n\r\nconst Day1 = () => {\r\n    return (\r\n        <>\r\n        <h1 style={{textAlign: \"center\", marginTop: \"2rem\"}}>Day 1</h1>\r\n        <h2 style={{textAlign: \"center\"}}>Stare at the Clock</h2>\r\n        </>\r\n    )\r\n}\r\nexport default Day1","const Day2 = () => {\r\n    return (\r\n        <>\r\n        <h1 style={{textAlign: \"center\", marginTop: \"2rem\"}}>Day 2</h1>\r\n        <h2 style={{textAlign: \"center\"}}>Stare at the Wall</h2>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Day2","const Day3 = () => {\r\n    return (\r\n        <>\r\n        <h1 style={{textAlign: \"center\", marginTop: \"2rem\"}}>Day 3</h1>\r\n        <h2 style={{textAlign: \"center\"}}>Stare at the Sky</h2>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Day3","import {Challenge} from \"../Challenges\"\r\nimport Day1 from \"./Day1\"\r\nimport Day2 from \"./Day2\"\r\nimport Day3 from \"./Day3\"\r\nimport { useHistory } from \"react-router\"\r\nimport StatusContext from \"../../context/Status\"\r\n\r\nconst DayChallenge = ({match}) => {\r\nconsole.log(match.params);\r\n   \r\n// const history = useHistory();\r\n// const doSomething = () => {\r\n//     return (\r\n//         alert(\"Failed\")\r\n//     )\r\n// }\r\n\r\n\r\n    // const handleOnClick = (e) => {\r\n    //     console.log(e.target.getAttribute('day').substr(3));\r\n    //     const index = Number(e.target.getAttribute('day').substr(3));\r\n    //    if(e.target.innerHTML === 'Failed') {\r\n    //        //setstate daystatus, currentprogress => depending on attribute 'day'\r\n    //        //dayStatus[index] = 'failed'\r\n    //        //send the state to the challenge page\r\n    //    }\r\n    //    if(e.target.innerHTML === 'Done') {\r\n    //        //setstate daystatus, currentprogress\r\n    //    }\r\n    //     // e.preventDefault(); //prevent transition\r\n    //     // doSomething();\r\n    \r\n    //     // // redirect after 1 second\r\n    //     // window.setTimeout(() => {\r\n    //     //    history.push('/challenges');\r\n    //     // }, 1000)\r\n    // };\r\n\r\n    const StatusButton = ({handleOnClick}) => {\r\n        console.log('click', handleOnClick);\r\n        return (\r\n            <div style={{display:'flex', justifyContent:'center'}}>\r\n\r\n            <Challenge to='/challenges' onClick={handleOnClick} day={match.params.day}>Failed</Challenge>\r\n            <Challenge to='/challenges' onClick={handleOnClick} day={match.params.day}>Done</Challenge>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    const Day = () => {\r\n        switch (match.params.day) {\r\n            case 'day1':\r\n                return <Day1/>\r\n            case 'day2':\r\n                return <Day2/>\r\n            case 'day3':\r\n                return <Day3/>\r\n            // case 'day4':\r\n            //     return <Day4/>\r\n            // case 'day5':\r\n            //     return <Day5/>\r\n            // case 'day6':\r\n            //     return <Day6/>\r\n            // case 'day7':\r\n            //     return <Day7/>\r\n            // case 'day8':\r\n            //     return <Day8/>\r\n            // case 'day9':\r\n            //     return <Day9/>\r\n            // case 'day10':\r\n            //     return <Day10/> \r\n            // case 'day11':\r\n            //     return <Day11/>\r\n            // case 'day12':\r\n            //     return <Day12/>\r\n            // case 'day13':\r\n            //     return <Day13/>\r\n            // case 'day14':\r\n            //     return <Day14/>\r\n            // case 'day15':\r\n            //     return <Day15/>\r\n            // case 'day16':\r\n            //     return <Day16/>\r\n            // case 'day17':\r\n            //     return <Day17/>\r\n            // case 'day18':\r\n            //     return <Day18/>\r\n            // case 'day19':\r\n            //     return <Day19/>\r\n            // case 'day20':\r\n            //     return <Day20/>    \r\n            // case 'day21':\r\n            //     return <Day21/>\r\n            // case 'day22':\r\n            //     return <Day22/>\r\n            // case 'day23':\r\n            //     return <Day23/>\r\n            // case 'day24':\r\n            //     return <Day24/>\r\n            // case 'day25':\r\n            //     return <Day25/>\r\n            // case 'day26':\r\n            //     return <Day26/>\r\n            // case 'day27':\r\n            //     return <Day27/>\r\n            // case 'day28':\r\n            //     return <Day28/>\r\n            // case 'day29':\r\n            //     return <Day29/>\r\n            // case 'day30':\r\n            //     return <Day30/>    \r\n            default:\r\n                return \"No Challenges Available Yet!\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Day/>\r\n        <StatusContext.Consumer>\r\n            {({handleOnClick}) => (\r\n            <StatusButton handleOnClick = {handleOnClick}/>\r\n            )}\r\n        </StatusContext.Consumer>\r\n        </>\r\n    ) \r\n\r\n   \r\n}\r\n\r\nexport default DayChallenge","import './App.css';\r\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport Nav from './components/Nav';\r\nimport Home from './components/Home';\r\nimport Motivation from './components/Motivation';\r\nimport Challenges from './components/Challenges';\r\nimport DayChallenge from './components/day-challenge/DayChallenge';\r\nimport StatusContext from './context/Status';\r\nimport { useEffect, useState } from 'react';\r\nimport {useHistory} from 'react-router'\r\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react/cjs/react.development';\r\n\r\nfunction App() {\r\n\r\n\r\n  const savedStatus = JSON.parse(localStorage.getItem('dayStatus')) || [];\r\n \r\n  const [dayStatus, setDayStatus] = useState(savedStatus);\r\n//   const history = useHistory();\r\n// const doSomething = () => {\r\n//     return (\r\n//         alert(\"Failed\")\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n    const handleOnClick = (e) => {\r\n      // console.log('target', e.target);\r\n      //   console.log(e.target.getAttribute('day').substr(3));\r\n        \r\n       if(e.target.innerHTML === 'Failed') {\r\n           //setstate daystatus, currentprogress => depending on attribute 'day'\r\n           const index = Number(e.target.getAttribute('day').substr(3));\r\n           dayStatus[index-1] = 'failed'\r\n          localStorage.dayStatus = JSON.stringify(dayStatus)\r\n           setDayStatus(dayStatus);\r\n          //  doSomething();\r\n           //send the state to the challenge page\r\n       }\r\n       if(e.target.innerHTML === 'Done') {\r\n        const index = Number(e.target.getAttribute('day').substr(3));\r\n        dayStatus[index-1] = 'done'\r\n        localStorage.dayStatus = JSON.stringify(dayStatus)\r\n\r\n        setDayStatus(dayStatus);\r\n\r\n           //setstate daystatus, currentprogress\r\n       }\r\n        // e.preventDefault(); //prevent transition\r\n        // doSomething();\r\n    \r\n        // // redirect after 1 second\r\n        // window.setTimeout(() => {\r\n        //    history.push('/challenges');\r\n        // }, 1000)\r\n\r\n        if(e.target.innerHTML === 'Reset') {\r\n          localStorage.dayStatus = JSON.stringify([]); // or null\r\n          setDayStatus([]);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <StatusContext.Provider value ={{dayStatus, handleOnClick}}>\r\n    <Router>\r\n      <Nav/>\r\n      <Switch>\r\n        <Route path='/' exact component={Home}/>\r\n        <Route path='/motivation' component={Motivation}/>\r\n        <Route path='/challenges' exact component={Challenges}/>\r\n\r\n        <Route path='/challenges/:day' component={DayChallenge}/>\r\n        {/* <Route path='/day2' component={Days.Day2}/> */}\r\n      </Switch>\r\n    </Router>\r\n    </StatusContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createGlobalStyle} from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle `\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    background-color: #FEFBF3;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n}\r\n`\r\n\r\nexport default GlobalStyle","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport GlobalStyle from './utils/GlobalStyles';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <GlobalStyle/>\r\n   \r\n      <App />\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}