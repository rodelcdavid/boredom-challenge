{"version":3,"sources":["components/Nav.js","context/Context.js","components/Home.js","components/Motivation.js","components/Challenges.js","components/day-challenge/Day1.js","components/day-challenge/Day2.js","components/day-challenge/Day3.js","components/day-challenge/DayChallenge.js","App.js","reportWebVitals.js","utils/GlobalStyles.js","index.js"],"names":["NavbarContainer","styled","div","MenuLinks","StyledLink","Link","Nav","className","to","StatusContext","React","createContext","ProgressContext","fadeInContent","keyframes","MainWrapper","Home","currentDayProgress","useContext","StartContinue","style","fontSize","marginTop","Motivation","width","height","src","title","frameBorder","allow","allowFullScreen","ChallengeGrid","Challenge","attrs","props","animationDelay","delay","status","Challenges","dayStatus","handleOnClickReset","handleOnClickStart","DaysArray","daysArray","i","push","Math","random","displayDayProgress","textAlign","display","margin","onClick","justifyContent","alignItems","Day1","Day2","Day3","ChallengeLink","DayChallenge","match","handleOnClickStatus","StatusButton","isFinished","dayIndex","day","params","Day","startingDateString","JSON","parse","localStorage","getItem","startingDate","Date","Number","substr","challengeDay","date","days","result","setDate","getDate","toString","slice","addDays","fontWeight","color","App","defaultDayStatus","concat","Array","fill","savedStatus","useState","setDayStatus","setCurrentDayProgress","useEffect","console","log","currentDate","getFullYear","getMonth","tempProgress","ceil","tempDayStatus","map","item","stringify","Provider","value","e","index","target","getAttribute","innerHTML","removeItem","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ecddc50.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Nav = () => {\r\n\r\nreturn (\r\n    <NavbarContainer>\r\n        <StyledLink className='logo' to='/'>30-Day Boredom</StyledLink>\r\n        <MenuLinks>\r\n            <StyledLink to='/challenges'>Challenges</StyledLink>\r\n            <StyledLink to='/motivation'>Motivation</StyledLink>\r\n            <StyledLink to='/'>Home</StyledLink>\r\n        </MenuLinks>\r\n    </NavbarContainer>\r\n)\r\n}\r\n\r\nconst NavbarContainer = styled.div`\r\n   \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    padding: 1rem;\r\n    \r\n    background-color: lightblue;\r\n\r\n    @media only screen and (min-width: 600px) {\r\n            \r\n            flex-direction: row;\r\n    }\r\n`\r\n\r\nconst MenuLinks = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n    color: black;\r\n    text-decoration: none;\r\n    padding: 0 1rem;\r\n    font-size: 1rem;\r\n    transition: all 150ms ease-in;\r\n\r\n    &:hover {\r\n        color: #F8F0DF;\r\n    }\r\n\r\n    &.logo {\r\n        font-size: 2rem;\r\n        \r\n    }\r\n\r\n    &.logo:hover {\r\n        color:black;\r\n    }\r\n\r\n\r\n    @media only screen and (min-width: 600px) {\r\n        &.logo {\r\n        margin-right: auto;\r\n    }\r\n    }\r\n\r\n  \r\n`\r\n\r\nexport default Nav","import React from \"react\";\r\n\r\nexport const StatusContext = React.createContext();\r\n\r\nexport const ProgressContext = React.createContext();","import styled, { keyframes } from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { ProgressContext } from \"../context/Context\"\r\nimport { useContext } from \"react\"\r\n\r\nconst Home = () => {\r\n    const {currentDayProgress} = useContext(ProgressContext);\r\n\r\n    const StartContinue = () => {\r\n        if (currentDayProgress===0) {\r\n            return (\r\n                <StyledLink to='/challenges'>Start the challenge!</StyledLink>\r\n            )\r\n        } else {\r\n            return (\r\n                <StyledLink to='/challenges'>Continue the challenge!</StyledLink>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MainWrapper>\r\n        <h1 style={{fontSize:'3rem'}}>Get your brain to focus more.</h1>\r\n        <p>Take back your attention span by embracing boredom.</p>\r\n\r\n        <div style={{marginTop: '2rem'}}>\r\n\r\n        <StyledLink to='/motivation'>Motivation</StyledLink>\r\n        <StartContinue/>\r\n        </div>\r\n        </MainWrapper>\r\n    )\r\n\r\n}\r\n\r\nconst fadeInContent = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\nexport const MainWrapper = styled.div`\r\n    text-align: center;\r\n    padding: 2rem;\r\n    animation: 1s ${fadeInContent} ease-in;\r\n\r\n    /* & h1 {\r\n        width: 50%;\r\n        margin: 0 auto;\r\n    } */\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n    display: block;\r\n    color: black;\r\n    text-decoration: none;\r\n    padding: 1rem 2rem;\r\n\r\n    &:hover {\r\n        color: lightblue;\r\n    }\r\n`\r\n\r\nexport default Home","import { MainWrapper } from \"./Home\"\r\nconst Motivation = () => {\r\n    return (\r\n        <MainWrapper>\r\n        <h1>Motivation</h1>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias, magni laboriosam quia molestiae obcaecati, id perferendis non, provident quo laborum aliquid sint? Error harum architecto ea deserunt hic eveniet facere! Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi, nemo? Sunt amet a blanditiis, illum inventore praesentium tempore similique nemo, velit ipsam distinctio iusto earum dolorem. Voluptas quo dolores ab?</p>\r\n\r\n       \r\n        <iframe  width=\"320px\" height=\"240px\" src=\"https://www.youtube.com/embed/Hu4Yvq-g7_Y\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n       \r\n        \r\n        </MainWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Motivation","import styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {StatusContext, ProgressContext } from \"../context/Context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst Challenges = () => {\r\nconst {dayStatus, handleOnClickReset} = useContext(StatusContext)\r\nconst {currentDayProgress, handleOnClickStart} = useContext(ProgressContext)\r\n\r\n\r\n//why is this always rerendering\r\n    const DaysArray = () => {\r\n        const daysArray = []\r\n        for (let i=1; i<=30; i++) {\r\n            daysArray.push(<Challenge\r\n                className={`animate__animated animate__zoomIn ${dayStatus[i-1]}`}\r\n                delay={Math.random() * 1}\r\n                key={i}\r\n                to={`/challenges/day${i}`}\r\n                >{i}</Challenge>)\r\n        }    \r\n        return daysArray\r\n    }\r\n\r\n   const displayDayProgress = (currentDayProgress > 30) ? 30 : currentDayProgress;\r\n    \r\n    if (currentDayProgress > 0) {\r\n        return (\r\n            <>\r\n       \r\n            <h1 style={{textAlign: \"center\", marginTop: \"2rem\"}}>Challenges</h1>\r\n            <p style= {{textAlign:'center'}}>Current Day: {displayDayProgress}/30</p>\r\n         \r\n            <ChallengeGrid>            \r\n            \r\n                <DaysArray/>\r\n                \r\n            </ChallengeGrid>\r\n            <button style={{display: 'block', margin: '0 auto', width: '100px'}} onClick={handleOnClickReset}>Reset</button>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div style = {{display:'flex', justifyContent:'center', alignItems:'center', height:'200px'}}>\r\n            <button onClick = {handleOnClickStart}>Start the Challenge</button>\r\n            </div>\r\n        )\r\n    }\r\n        \r\n        \r\n\r\n    \r\n\r\n    \r\n}\r\n\r\nconst ChallengeGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 50px);\r\n    grid-template-rows: repeat(6, 50px);\r\n    grid-gap: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    \r\n`\r\n\r\n\r\n\r\n\r\nexport const Challenge = styled(Link).attrs( props => ({\r\n    style: {\r\n        animationDelay: `${props.delay}s`\r\n    }\r\n})\r\n\r\n)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 50px;\r\n    height: 50px;\r\n    color: black;\r\n    font-weight: bolder;\r\n    text-decoration: none;\r\n    border: solid 2px black;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    transition: all 150ms ease-in;\r\n    background-color: ${({status}) => {\r\n        switch (status) {\r\n            case 'failed':\r\n                return 'red'\r\n            case 'done':\r\n                return 'lightgreen'\r\n            case 'current':\r\n                return 'lightblue'\r\n            default:\r\n                return 'lightblue'\r\n        }\r\n    }};\r\n    position: relative;\r\n\r\n\r\n    /* &.done, &.failed {\r\n        pointer-events: none;\r\n       \r\n    } */\r\n\r\n    /* TODO: refactor if statement */\r\n    .done&::after {\r\n        content: \"\";\r\n        background-image: url(\"https://cdn-icons-png.flaticon.com/512/190/190411.png\");\r\n        background-size: 30px 30px;\r\n        position: absolute;\r\n        top: 11px;\r\n        left: 11px;\r\n        width: 30px;\r\n        height: 30px;\r\n      \r\n    }\r\n\r\n    .failed&::after {\r\n        content: \"\";\r\n        background-image: url(\"https://cdn-icons-png.flaticon.com/512/753/753345.png\");\r\n        background-size: 30px 30px;\r\n        position: absolute;\r\n        top: 11px;\r\n        left: 11px;\r\n        width: 30px;\r\n        height: 30px;\r\n    }\r\n\r\n    .locked&::after{\r\n        content: \"\";\r\n        background-image: url(\"https://cdn-icons-png.flaticon.com/512/2913/2913133.png\");\r\n        background-size: 20px 20px;\r\n    position: absolute;\r\n    top: -5px;\r\n    left: 35px;\r\n    width: 20px;\r\n    height: 20px;\r\n    }\r\n   \r\n    &:hover {\r\n        box-shadow: 0 0 10px darkgreen;\r\n    }\r\n   \r\n`\r\n\r\nexport default Challenges","\r\n\r\nconst Day1 = () => {\r\n    return (\r\n        <>\r\n        <h2 style={{textAlign: \"center\"}}>Stare at the Clock</h2>\r\n        </>\r\n    )\r\n}\r\nexport default Day1","const Day2 = () => {\r\n    return (\r\n        <>\r\n\r\n        <h2 style={{textAlign: \"center\"}}>Stare at the Wall</h2>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Day2","const Day3 = () => {\r\n    return (\r\n        <>\r\n        <h2 style={{textAlign: \"center\"}}>Stare at the Sky</h2>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Day3","import Day1 from \"./Day1\"\r\nimport Day2 from \"./Day2\"\r\nimport Day3 from \"./Day3\"\r\nimport {ProgressContext, StatusContext} from \"../../context/Context\"\r\nimport { useContext } from \"react\"\r\nimport { MainWrapper } from \"../Home\"\r\nimport { Link } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\n\r\nconst DayChallenge = ({match}) => {\r\n\r\n    const {dayStatus, handleOnClickStatus} = useContext(StatusContext);\r\n    const {currentDayProgress} = useContext(ProgressContext)\r\n\r\n    const StatusButton = () => {\r\n\r\n        const isFinished = ((dayStatus[dayIndex-1]==='done') || ((dayStatus[dayIndex-1]==='failed'))) ? true: false;\r\n  \r\n        if ((currentDayProgress >= dayIndex) && isFinished) {\r\n            return (\r\n                <ChallengeLink to='/challenges'>Back to Challenges</ChallengeLink>\r\n            )\r\n        }\r\n        return (\r\n            <div style={{display:'flex', justifyContent:'center'}}>\r\n\r\n            <ChallengeLink to='/challenges' onClick={handleOnClickStatus} day={match.params.day}>Failed</ChallengeLink>\r\n            <ChallengeLink to='/challenges' onClick={handleOnClickStatus} day={match.params.day}>Done</ChallengeLink>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Day = () => {\r\n        switch (match.params.day) {\r\n            case 'day1':\r\n                return <Day1/>\r\n            case 'day2':\r\n                return <Day2/>\r\n            case 'day3':\r\n                return <Day3/>\r\n            // case 'day4':\r\n            //     return <Day4/>\r\n            // case 'day5':\r\n            //     return <Day5/>\r\n            // case 'day6':\r\n            //     return <Day6/>\r\n            // case 'day7':\r\n            //     return <Day7/>\r\n            // case 'day8':\r\n            //     return <Day8/>\r\n            // case 'day9':\r\n            //     return <Day9/>\r\n            // case 'day10':\r\n            //     return <Day10/> \r\n            // case 'day11':\r\n            //     return <Day11/>\r\n            // case 'day12':\r\n            //     return <Day12/>\r\n            // case 'day13':\r\n            //     return <Day13/>\r\n            // case 'day14':\r\n            //     return <Day14/>\r\n            // case 'day15':\r\n            //     return <Day15/>\r\n            // case 'day16':\r\n            //     return <Day16/>\r\n            // case 'day17':\r\n            //     return <Day17/>\r\n            // case 'day18':\r\n            //     return <Day18/>\r\n            // case 'day19':\r\n            //     return <Day19/>\r\n            // case 'day20':\r\n            //     return <Day20/>    \r\n            // case 'day21':\r\n            //     return <Day21/>\r\n            // case 'day22':\r\n            //     return <Day22/>\r\n            // case 'day23':\r\n            //     return <Day23/>\r\n            // case 'day24':\r\n            //     return <Day24/>\r\n            // case 'day25':\r\n            //     return <Day25/>\r\n            // case 'day26':\r\n            //     return <Day26/>\r\n            // case 'day27':\r\n            //     return <Day27/>\r\n            // case 'day28':\r\n            //     return <Day28/>\r\n            // case 'day29':\r\n            //     return <Day29/>\r\n            // case 'day30':\r\n            //     return <Day30/>    \r\n            default:\r\n                return (\r\n                    <div style = {{textAlign:'center'}}>No Challenges Available Yet!</div>\r\n                )\r\n        }\r\n    }\r\n   \r\n    const startingDateString = JSON.parse(localStorage.getItem('startingDate'))\r\n    const startingDate = new Date(startingDateString)\r\n    const dayIndex = Number(match.params.day.substr(3));\r\n\r\n    const addDays = (date, days) => {\r\n        const result = new Date(date);\r\n        result.setDate(result.getDate() + days);\r\n        const formattedDate = result.toString().slice(0,10) + \",\" + result.toString().slice(10,15);\r\n        return formattedDate;\r\n    }\r\n\r\n    const challengeDay = addDays(startingDate, dayIndex-1);\r\n\r\n    if (currentDayProgress < dayIndex ){\r\n        return (\r\n            <MainWrapper>\r\n            <h2>{`Day ${dayIndex}`}</h2>\r\n            {/* <Day/> */}\r\n            <br/>\r\n            <h1>This challenge is still locked.</h1>\r\n            <p>Come back on <span style={{fontWeight:'bolder', color:'lightsalmon'}}>{challengeDay}</span> to do this challenge.</p>\r\n            </MainWrapper>\r\n        )\r\n      \r\n    }\r\n    \r\n    return (\r\n        <MainWrapper>\r\n        <h2>{`Day ${dayIndex}`}</h2>\r\n        <p>{challengeDay}</p>\r\n        <Day/>\r\n        <StatusButton/>\r\n        </MainWrapper>\r\n        ) \r\n   \r\n}\r\n\r\nconst ChallengeLink = styled(Link)`\r\n    display: block;\r\n    width: 200px;\r\n    margin: 0 auto;\r\n    color: black;\r\n    text-decoration: none;\r\n    background-color: lightblue;\r\n    padding: 0.5rem;\r\n    border-radius: 10px;\r\n   \r\n`\r\n\r\nexport default DayChallenge","import './App.css';\r\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport Nav from './components/Nav';\r\nimport Home from './components/Home';\r\nimport Motivation from './components/Motivation';\r\nimport Challenges from './components/Challenges';\r\nimport DayChallenge from './components/day-challenge/DayChallenge';\r\nimport {StatusContext, ProgressContext} from './context/Context';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n\r\n  const defaultDayStatus = ['todo'].concat(Array(29).fill('locked'));\r\n  const savedStatus = JSON.parse(localStorage.getItem('dayStatus')) || defaultDayStatus;\r\n\r\n  const [dayStatus, setDayStatus] = useState(savedStatus);\r\n  const [currentDayProgress, setCurrentDayProgress] = useState(0);\r\n\r\n//componentdidmount\r\nuseEffect(() => {\r\n  const date = new Date()\r\n  console.log(date);\r\n  const currentDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n  // const currentDate = new Date(2021, 8, 25);\r\n  const startingDateString = JSON.parse(localStorage.getItem('startingDate'))\r\n  const startingDate = new Date(startingDateString);\r\n \r\n\r\n  if (startingDateString === null) {\r\n    const tempProgress = 0;\r\n    setCurrentDayProgress(tempProgress);\r\n  } else {\r\n    const tempProgress = Math.ceil((currentDate - startingDate)/(1000 * 60 * 60 * 24) + 1);\r\n    setCurrentDayProgress(tempProgress);\r\n\r\n \r\n    const savedStatus = JSON.parse(localStorage.getItem('dayStatus'))\r\n    const tempDayStatus = savedStatus.map((item, i)=>{\r\n        if (((i+1)<=tempProgress) && item!=='failed' && item!=='done') {\r\n          return \"todo\";\r\n        } else if ((i+1)>tempProgress) { // just to make sure if they go back in date it will lock future\r\n          return \"locked\";\r\n        } else {\r\n          return item;\r\n        }\r\n    })\r\n    setDayStatus(tempDayStatus);\r\n  }\r\n}, [])\r\n\r\n    const handleOnClickStatus = (e) => {\r\n      const tempDayStatus = [...dayStatus]\r\n      const index = Number(e.target.getAttribute('day').substr(3));\r\n\r\n       if(e.target.innerHTML === 'Failed') {\r\n          tempDayStatus[index-1] = 'failed'\r\n          setDayStatus(tempDayStatus);       \r\n       }\r\n       if(e.target.innerHTML === 'Done') {\r\n          tempDayStatus[index-1] = 'done'\r\n          setDayStatus(tempDayStatus);\r\n       }\r\n    };\r\n\r\n    const handleOnClickReset = () => {\r\n        setDayStatus(defaultDayStatus);\r\n        \r\n       localStorage.removeItem('startingDate')\r\n       setCurrentDayProgress(0);\r\n    }\r\n\r\n    const handleOnClickStart = () => {\r\n      const date = new Date();\r\n      const startingDate = new Date (date.getFullYear(), date.getMonth(), date.getDate())\r\n      localStorage.startingDate = JSON.stringify(startingDate);\r\n      setCurrentDayProgress(currentDayProgress+1);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      localStorage.dayStatus = JSON.stringify(dayStatus);\r\n    }, [dayStatus])\r\n    \r\n    \r\n  return (\r\n    <StatusContext.Provider value ={{dayStatus, handleOnClickStatus, handleOnClickReset}}>\r\n    <ProgressContext.Provider value = {{currentDayProgress, handleOnClickStart}}>\r\n\r\n    <Router>\r\n      <Nav/>\r\n      <Switch>\r\n        <Route path='/' exact component={Home}/>\r\n        <Route path='/motivation' component={Motivation}/>\r\n        <Route path='/challenges' exact component={Challenges}/>\r\n        <Route path='/challenges/:day' component={DayChallenge}/>\r\n      </Switch>\r\n    </Router>\r\n    </ProgressContext.Provider>\r\n    </StatusContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createGlobalStyle} from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle `\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    background-color: #FEFBF3;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n}\r\n`\r\n\r\nexport default GlobalStyle","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport GlobalStyle from './utils/GlobalStyles';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <GlobalStyle/>\r\n   \r\n      <App />\r\n  \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}